server:
  port: 8000

#  eureka.client.register-with-eureka
#  ?????? ??? ????? ?? ?? (??? true)
#  ????? ??? Eureka Server??? ?? peering ??? ??. (Eureka Server ??? ??? peering ??? ??? ????? ??? sync ? ??)
#  ?? ??? ??(standalone)??? peering ??? ????? Eureka Client? ??? ?

#  eureka.client.fetch-registry
#  ?????? ?? ??? ????? ?? ?? (??? true)
#  true ? ?? ? ??? ??? Eureka Server ? ???? ?? ?????? ??? ???
#  30??? Eureka Client ? ??? ????? ?? ?? ?? ????
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
    #???? ????


#  predicates : if ???

spring :
  application :
    name : api-gateway-service
  cloud:
    gateway:
      default-filters:
        - name : GlobalFilter
          args:
            baseMessage: Spring Cloud GateWay Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
#          lb = Load Balancer
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
#      user-service  End
        - id : catalog-service #유레카에 등록될 아이디값
          uri: lb://CATALOG-SERVICE #유레카 등록된 키값
          predicates:
            - Path=/catalog-service/** #프론트에서 오는요청